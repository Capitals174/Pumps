import math
#Приложение В IV Определение температуры насыщения по давлению насыщения
def satu_temp_by_satur_pressure(p):
    beta = p ** 0.25
    E = beta**2 - 17.073846940092 * beta + 14.91510861353
    f = 1167.0521452767 * beta**2 + 12020.82470247 * beta - 4823.2657361591
    G = -724213.16703206 * beta**2 - 3232555.0322333 * beta + 405113.40542057
    D = 2 * G / (-f - (f**2 - 4 * E * G)**0.5)
    t4_p = (650.17534844798 + D - ((650.17534844798 + D)**2 - 4 * (-0.23855557567849 + 650.17534844798 * D))**0.5) / 2
    return t4_p


# Приложение В I Определение удельной энтальпии недогретой воды по значениям абсолютных давления и температуры
def spec_enthalpy_of_subcooled_water(p, t):
    i1 = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 8, 8, 21, 23, 29, 30, 31, 32]
    j1 = [-2, -1, 0, 1, 2, 3, 4, 5, -9, -7, -1, 0, 1, 3, -3, 0, 1, 3, 17, -4, 0, 6, -5, -2, 10, -8, -11, -6, -29, -31,
          -38, -39, -40, -41]
    n1 = [0.14632971213167, -0.84548187169114, -3.756360367204, 3.3855169168385, -0.95791963387872, 0.15772038513228,
          -0.016616417199501, 8.1214629983568E-04, 2.8319080123804E-04, -6.0706301565874E-04, -0.018990068218419,
          -0.032529748770505, -0.021841717175414, -5.283835796993E-05, -4.7184321073267E-04, -3.0001780793026E-04,
          4.7661393906987E-05, -4.4141845330846E-06, -7.2694996297594E-16, -3.1679644845054E-05, -2.8270797985312E-06,
          -8.5205128120103E-10, -2.2425281908E-06, -6.5171222895601E-07, -1.4341729937924E-13, -4.0516996860117E-07,
          -1.2734301741641E-09, -1.7424871230634E-10, -6.8762131295531E-19, 1.4478307828521E-20, 2.6335781662795E-23,
          -1.1947622640071E-23, 1.8228094581404E-24, -9.3537087292458E-26]
    r = 0.461526
    pi = p / 16.53
    tau = 1386 / t
    gamma_der_tau = 0
    for elem in range(len(i1)):
        gamma_der_tau += (n1[elem] * (7.1 - pi) ** i1[elem] * j1[elem] * (tau - 1.222) ** (j1[elem] - 1))
    h1 = r * t * tau * gamma_der_tau
    return h1


# Приложение В II Определение удельной энтропии недогретой воды по значениям абсолютных давления и температуры
def spec_entropy_of_subcooled_water(p, T):
    i1 = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 8, 8, 21, 23, 29, 30, 31, 32]
    j1 = [-2, -1, 0, 1, 2, 3, 4, 5, -9, -7, -1, 0, 1, 3, -3, 0, 1, 3, 17, -4, 0, 6, -5, -2, 10, -8, -11, -6, -29, -31,
          -38, -39, -40, -41]
    n1 = [0.14632971213167, -0.84548187169114, -3.756360367204, 3.3855169168385, -0.95791963387872, 0.15772038513228,
          -0.016616417199501, 8.1214629983568E-04, 2.8319080123804E-04, -6.0706301565874E-04, -0.018990068218419,
          -0.032529748770505, -0.021841717175414, -5.283835796993E-05, -4.7184321073267E-04, -3.0001780793026E-04,
          4.7661393906987E-05, -4.4141845330846E-06, -7.2694996297594E-16, -3.1679644845054E-05, -2.8270797985312E-06,
          -8.5205128120103E-10, -2.2425281908E-06, -6.5171222895601E-07, -1.4341729937924E-13, -4.0516996860117E-07,
          -1.2734301741641E-09, -1.7424871230634E-10, -6.8762131295531E-19, 1.4478307828521E-20, 2.6335781662795E-23,
          -1.1947622640071E-23, 1.8228094581404E-24, -9.3537087292458E-26]
    r = 0.461526
    pi = p / 16.53
    tau = 1386 / T
    gamma = 0
    gamma_der_tau = 0
    for i in range(34):
        gamma_der_tau += (n1[i] * (7.1 - pi) ** i1[i] * j1[i] * (tau - 1.222) ** (j1[i] - 1))
        gamma += n1[i] * (7.1 - pi) ** i1[i] * (tau - 1.222) ** j1[i]

    s = r * tau * gamma_der_tau - r * gamma
    return s


# Приложение В III. Определение удельного объема недогретой жидкости:

def volume_of_subcooled_liquid(p, T):
    i1 = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 8, 8, 21, 23, 29, 30, 31, 32]
    j1 = [-2, -1, 0, 1, 2, 3, 4, 5, -9, -7, -1, 0, 1, 3, -3, 0, 1, 3, 17, -4, 0, 6, -5, -2, 10, -8, -11, -6, -29, -31,
          -38, -39, -40, -41]
    n1 = [0.14632971213167, -0.84548187169114, -3.756360367204, 3.3855169168385, -0.95791963387872, 0.15772038513228,
          -0.016616417199501, 8.1214629983568E-04, 2.8319080123804E-04, -6.0706301565874E-04, -0.018990068218419,
          -0.032529748770505, -0.021841717175414, -5.283835796993E-05, -4.7184321073267E-04, -3.0001780793026E-04,
          4.7661393906987E-05, -4.4141845330846E-06, -7.2694996297594E-16, -3.1679644845054E-05, -2.8270797985312E-06,
          -8.5205128120103E-10, -2.2425281908E-06, -6.5171222895601E-07, -1.4341729937924E-13, -4.0516996860117E-07,
          -1.2734301741641E-09, -1.7424871230634E-10, -6.8762131295531E-19, 1.4478307828521E-20, 2.6335781662795E-23,
          -1.1947622640071E-23, 1.8228094581404E-24, -9.3537087292458E-26]
    r = 0.461526
    pi = p / 16.53
    tau = 1386 / T
    gamma_der_pi = 0
    for i in range(34):
        gamma_der_pi += -1 * n1[i] * i1[i] * (7.1 - pi) ** (i1[i] - 1) * (tau - 1.222) ** j1[i]

    v1 = r * T / p * pi * gamma_der_pi / 1000
    return v1


# Приложение В V удельной энтальпии кипящей воды не нужно нам оно
def boiling_water_enthalpy(p):
    if p > 0.000611657 and p < 22.06395:
        ts = satu_temp_by_satur_pressure(p)
        if p < 16.529:
            answer = spec_enthalpy_of_subcooled_water(p, ts)
        else:
            low_Bound = 1670.858218
            high_Bound = 2087.23500164864
            hs = (low_Bound + high_Bound) / 2
            answer = hs
    else:
        return print('Некорректное давление пара')

    return answer


# Приложение В VI Определение удельной энтальпии перегретого пара

def superheated_steam_enthalpy(p, t):
    j0 = [0, 1, -5, -4, -3, -2, -1, 2, 3]
    n0 = [-9.6927686500217, 10.086655968018, -0.005608791128302, 0.071452738081455, -0.40710498223928, 1.4240819171444,
          -4.383951131945, -0.28408632460772, 0.021268463753307]
    ir = [1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 5, 6, 6, 6, 7, 7, 7, 8, 8, 9, 10, 10, 10, 16, 16, 18,
          20, 20, 20, 21, 22, 23, 24, 24, 24]
    jr = [0, 1, 2, 3, 6, 1, 2, 4, 7, 36, 0, 1, 3, 6, 35, 1, 2, 3, 7, 3, 16, 35, 0, 11, 25, 8, 36, 13, 4, 10, 14, 29, 50,
          57, 20, 35, 48, 21, 53, 39, 26, 40, 58]
    nr = [-1.7731742473213E-03, -0.017834862292358, -0.045996013696365, -0.057581259083432, -0.05032527872793,
          -3.3032641670203E-05, -1.8948987516315E-04, -3.9392777243355E-03, -0.043797295650573, -2.6674547914087E-05,
          2.0481737692309E-08, 4.3870667284435E-07, -3.227767723857E-05, -1.5033924542148E-03, -0.040668253562649,
          -7.8847309559367E-10, 1.2790717852285E-08, 4.8225372718507E-07, 2.2922076337661E-06, -1.6714766451061E-11,
          -2.1171472321355E-03, -23.895741934104, -5.905956432427E-18, -1.2621808899101E-06, -0.038946842435739,
          1.1256211360459E-11, -8.2311340897998, 1.9809712802088E-08, 1.0406965210174E-19, -1.0234747095929E-13,
          -1.0018179379511E-09, -8.0882908646985E-11, 0.10693031879409, -0.33662250574171, 8.9185845355421E-25,
          3.0629316876232E-13, -4.2002467698208E-06, -5.9056029685639E-26, 3.7826947613457E-06, -1.2768608934681E-15,
          7.3087610595061E-29, 5.5414715350778E-17, -9.436970724121E-07]
    r = 0.461526
    pi = p
    tau = 540 / t
    g0_tau = 0
    for k in range(len(j0)):
        g0_tau += n0[k] * j0[k] * tau ** (j0[k] - 1)

    gr_tau = 0
    for numb in range(43):
        gr_tau += nr[numb] * pi ** ir[numb] * ir[numb] * (tau - 0.5) ** (jr[numb] - 1)

    h2 = r * t * tau * (g0_tau + gr_tau)
    return h2


# Приложение В VII Определение удельной энтропии перегретого пара
def superheated_steam_entropy(p, T):
    j0 = [0, 1, -5, -4, -3, -2, -1, 2, 3]
    n0 = [-9.6927686500217, 10.086655968018, -0.005608791128302, 0.071452738081455, -0.40710498223928, 1.4240819171444,
          -4.383951131945, -0.28408632460772, 0.021268463753307]
    ir = [1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 5, 6, 6, 6, 7, 7, 7, 8, 8, 9, 10, 10, 10, 16, 16, 18,
          20, 20, 20, 21, 22, 23, 24, 24, 24]
    jr = [0, 1, 2, 3, 6, 1, 2, 4, 7, 36, 0, 1, 3, 6, 35, 1, 2, 3, 7, 3, 16, 35, 0, 11, 25, 8, 36, 13, 4, 10, 14, 29, 50,
          57, 20, 35, 48, 21, 53, 39, 26, 40, 58]
    nr = [-1.7731742473213E-03, -0.017834862292358, -0.045996013696365, -0.057581259083432, -0.05032527872793,
          -3.3032641670203E-05, -1.8948987516315E-04, -3.9392777243355E-03, -0.043797295650573, -2.6674547914087E-05,
          2.0481737692309E-08, 4.3870667284435E-07, -3.227767723857E-05, -1.5033924542148E-03, -0.040668253562649,
          -7.8847309559367E-10, 1.2790717852285E-08, 4.8225372718507E-07, 2.2922076337661E-06, -1.6714766451061E-11,
          -2.1171472321355E-03, -23.895741934104, -5.905956432427E-18, -1.2621808899101E-06, -0.038946842435739,
          1.1256211360459E-11, -8.2311340897998, 1.9809712802088E-08, 1.0406965210174E-19, -1.0234747095929E-13,
          -1.0018179379511E-09, -8.0882908646985E-11, 0.10693031879409, -0.33662250574171, 8.9185845355421E-25,
          3.0629316876232E-13, -4.2002467698208E-06, -5.9056029685639E-26, 3.7826947613457E-06, -1.2768608934681E-15,
          7.3087610595061E-29, 5.5414715350778E-17, -9.436970724121E-07]
    r = 0.461526
    pi = p
    tau = 540 / T
    g0 = math.log(pi)
    g0_tau = 0
    for i in range(len(j0)):
        g0 += n0[i] * tau ** j0[i]
        g0_tau += n0[i] * j0[i] * tau ** (j0[i] - 1)

    gr = 0
    gr_tau = 0
    for i in range(43):
        gr += nr[i] * pi ** ir[i] * (tau - 0.5) ** jr[i]
        gr_tau += nr[i] * pi ** ir[i] * jr[i] * (tau - 0.5) ** (jr[i] - 1)

    s = r * (tau * (g0_tau + gr_tau) - (g0 + gr))
    return s


# Приложение В VIII Определение удельного объема перегретого пара
def superheated_steam_volume(p, T):
    j0 = [0, 1, -5, -4, -3, -2, -1, 2, 3]
    n0 = [-9.6927686500217, 10.086655968018, -0.005608791128302, 0.071452738081455, -0.40710498223928, 1.4240819171444,
          -4.383951131945, -0.28408632460772, 0.021268463753307]
    ir = [1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 5, 6, 6, 6, 7, 7, 7, 8, 8, 9, 10, 10, 10, 16, 16, 18,
          20, 20, 20, 21, 22, 23, 24, 24, 24]
    jr = [0, 1, 2, 3, 6, 1, 2, 4, 7, 36, 0, 1, 3, 6, 35, 1, 2, 3, 7, 3, 16, 35, 0, 11, 25, 8, 36, 13, 4, 10, 14, 29, 50,
          57, 20, 35, 48, 21, 53, 39, 26, 40, 58]
    nr = [-1.7731742473213E-03, -0.017834862292358, -0.045996013696365, -0.057581259083432, -0.05032527872793,
          -3.3032641670203E-05, -1.8948987516315E-04, -3.9392777243355E-03, -0.043797295650573, -2.6674547914087E-05,
          2.0481737692309E-08, 4.3870667284435E-07, -3.227767723857E-05, -1.5033924542148E-03, -0.040668253562649,
          -7.8847309559367E-10, 1.2790717852285E-08, 4.8225372718507E-07, 2.2922076337661E-06, -1.6714766451061E-11,
          -2.1171472321355E-03, -23.895741934104, -5.905956432427E-18, -1.2621808899101E-06, -0.038946842435739,
          1.1256211360459E-11, -8.2311340897998, 1.9809712802088E-08, 1.0406965210174E-19, -1.0234747095929E-13,
          -1.0018179379511E-09, -8.0882908646985E-11, 0.10693031879409, -0.33662250574171, 8.9185845355421E-25,
          3.0629316876232E-13, -4.2002467698208E-06, -5.9056029685639E-26, 3.7826947613457E-06, -1.2768608934681E-15,
          7.3087610595061E-29, 5.5414715350778E-17, -9.436970724121E-07]
    r = 0.461526
    pi = p
    tau = 540 / T
    g0_pi = 1 / pi
    gr_pi = 0
    for i in range(43):
        gr_pi += nr[i] * ir[i] * pi ** (ir[i] - 1) * (tau - 0.5) ** jr[i]

    v2 = r * T / p * pi * (g0_pi + gr_pi) / 1000
    return v2




# Приложение X Определение давления насыщения по удельной энтальпии насыщенного пара
def saturation_pressure_by_enthalpy_of_saturated_steam(h):
    ii = [0, 1, 1, 1, 1, 5, 7, 8, 14, 20, 22, 24, 28, 36]
    ji = [0, 1, 3, 4, 36, 3, 0, 24, 16, 16, 3, 18, 8, 24]
    ni = [0.600073641753024, -9.36203654849857, 24.6590798594147, -107.014222858224, -91582131580576.8,
          -8623.32011700662, -23.5837344740032, 2.52304969384128E+17, -3.89718771997719E+18, -3.33775713645296E+22,
          35649946963.6328, -1.48547544720641E+26, 3.30611514838798E+18, 8.13641294467829E+37]
    hs = h / 2600
    ps = 0
    for i in range(14):
        ps += ni[i] * (hs - 1.02) ** ii[i] * (hs - 0.608) ** ji[i]

    p = ps * 22
    return p


# Приложение В IX Определение удельной энтальпии кипящей воды сухого насыщенного пара
def enthalpy_of_boiling_water_of_dr_saturated_steam(p):
    if p > 0.000611657 and p < 22.06395:
        Ts = satu_temp_by_satur_pressure(p)
        if p < 16.529:
            h4 = superheated_steam_enthalpy(p, Ts)
        else:
            low_bound = 2087.23500164864
            high_bound = 2563.592004 + 5
            ps = -1000;
            while abs(p - ps) > 0.000001:
                hs = (low_bound + high_bound) / 2
                ps = saturation_pressure_by_enthalpy_of_saturated_steam(hs)
                if ps < p:
                    high_bound = hs
                else:
                    low_Bound = hs

            h4 = hs

    else:
        return print('Некорректное давление пара')

    return h4